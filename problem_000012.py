'''
Project Euler
Problem 12
2/20/2021

The sequence of triangle numbers is generated by adding the natural numbers.
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first
ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred
divisors?
'''

from itertools import accumulate, count
from utils import get_divisors


def solution(n):
    triangle_nums = accumulate(count(3), initial=3)
    memo = {1: {1}}
    primes = [2, 3]
    return next((x for x in triangle_nums
                 if len(get_divisors(x, memo, primes)) > n))


assert(solution(5) == 28)
print(solution(500))
